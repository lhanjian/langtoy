Rules:
------
0:	$start -> program $end
1:	program -> form_list
2:	form_list -> /* empty */
3:	form_list -> form_list form
4:	form -> func_defn
5:	form -> expr
6:	func_defn -> LAMBDA IDENT abstraction
7:	expr -> LPAREN abstraction RPAREN
8:	expr -> LPAREN application RPAREN
9:	abstraction -> COLON param_list expr
10:	param_list -> ident_list
11:	ident_list -> /* empty */
12:	ident_list -> IDENT ident_list
13:	application -> term arg_list
14:	arg_list -> term_list
15:	literal -> STRLITERAL
16:	literal -> NUMLITERAL
17:	term_list -> /* empty */
18:	term_list -> term term_list
19:	term -> expr
20:	term -> IDENT
21:	term -> literal

States:
-------
State 0:

	$start -> . program $end	(Rule 0)

	$default	reduce using rule 2 (form_list)

	form_list	go to state 2
	program	go to state 1

State 1:

	$start -> program . $end	(Rule 0)

	$end	shift, and go to state 3

State 2:

	program -> form_list .	(Rule 1)
	form_list -> form_list . form	(Rule 3)

	LAMBDA	shift, and go to state 7
	LPAREN	shift, and go to state 4

	$default	reduce using rule 1 (program)

	expr	go to state 8
	func_defn	go to state 6
	form	go to state 5

State 3:

	$start -> program $end .	(Rule 0)

	$default	accept

State 4:

	expr -> LPAREN . abstraction RPAREN	(Rule 7)
	expr -> LPAREN . application RPAREN	(Rule 8)

	COLON	shift, and go to state 14
	IDENT	shift, and go to state 13
	LPAREN	shift, and go to state 4
	NUMLITERAL	shift, and go to state 9
	STRLITERAL	shift, and go to state 11

	expr	go to state 12
	abstraction	go to state 10
	term	go to state 16
	application	go to state 15
	literal	go to state 17

State 5:

	form_list -> form_list form .	(Rule 3)

	$default	reduce using rule 3 (form_list)

State 6:

	form -> func_defn .	(Rule 4)

	$default	reduce using rule 4 (form)

State 7:

	func_defn -> LAMBDA . IDENT abstraction	(Rule 6)

	IDENT	shift, and go to state 18

State 8:

	form -> expr .	(Rule 5)

	$default	reduce using rule 5 (form)

State 9:

	literal -> NUMLITERAL .	(Rule 16)

	$default	reduce using rule 16 (literal)

State 10:

	expr -> LPAREN abstraction . RPAREN	(Rule 7)

	RPAREN	shift, and go to state 19

State 11:

	literal -> STRLITERAL .	(Rule 15)

	$default	reduce using rule 15 (literal)

State 12:

	term -> expr .	(Rule 19)

	$default	reduce using rule 19 (term)

State 13:

	term -> IDENT .	(Rule 20)

	$default	reduce using rule 20 (term)

State 14:

	abstraction -> COLON . param_list expr	(Rule 9)

	IDENT	shift, and go to state 22

	$default	reduce using rule 11 (ident_list)

	ident_list	go to state 20
	param_list	go to state 21

State 15:

	expr -> LPAREN application . RPAREN	(Rule 8)

	RPAREN	shift, and go to state 23

State 16:

	application -> term . arg_list	(Rule 13)

	IDENT	shift, and go to state 13
	LPAREN	shift, and go to state 4
	NUMLITERAL	shift, and go to state 9
	STRLITERAL	shift, and go to state 11

	$default	reduce using rule 17 (term_list)

	expr	go to state 12
	arg_list	go to state 26
	term	go to state 24
	term_list	go to state 25
	literal	go to state 17

State 17:

	term -> literal .	(Rule 21)

	$default	reduce using rule 21 (term)

State 18:

	func_defn -> LAMBDA IDENT . abstraction	(Rule 6)

	COLON	shift, and go to state 14

	abstraction	go to state 27

State 19:

	expr -> LPAREN abstraction RPAREN .	(Rule 7)

	$default	reduce using rule 7 (expr)

State 20:

	param_list -> ident_list .	(Rule 10)

	$default	reduce using rule 10 (param_list)

State 21:

	abstraction -> COLON param_list . expr	(Rule 9)

	LPAREN	shift, and go to state 4

	expr	go to state 28

State 22:

	ident_list -> IDENT . ident_list	(Rule 12)

	IDENT	shift, and go to state 22

	$default	reduce using rule 11 (ident_list)

	ident_list	go to state 29

State 23:

	expr -> LPAREN application RPAREN .	(Rule 8)

	$default	reduce using rule 8 (expr)

State 24:

	term_list -> term . term_list	(Rule 18)

	IDENT	shift, and go to state 13
	LPAREN	shift, and go to state 4
	NUMLITERAL	shift, and go to state 9
	STRLITERAL	shift, and go to state 11

	$default	reduce using rule 17 (term_list)

	literal	go to state 17
	term_list	go to state 30
	term	go to state 24
	expr	go to state 12

State 25:

	arg_list -> term_list .	(Rule 14)

	$default	reduce using rule 14 (arg_list)

State 26:

	application -> term arg_list .	(Rule 13)

	$default	reduce using rule 13 (application)

State 27:

	func_defn -> LAMBDA IDENT abstraction .	(Rule 6)

	$default	reduce using rule 6 (func_defn)

State 28:

	abstraction -> COLON param_list expr .	(Rule 9)

	$default	reduce using rule 9 (abstraction)

State 29:

	ident_list -> IDENT ident_list .	(Rule 12)

	$default	reduce using rule 12 (ident_list)

State 30:

	term_list -> term term_list .	(Rule 18)

	$default	reduce using rule 18 (term_list)


Summary:
--------
Number of rules         : 22
Number of terminals     : 8
Number of non-terminals : 14
Number of states        : 31
